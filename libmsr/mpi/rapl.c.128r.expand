
;; Function MPI_Init (MPI_Init)


;; Generating RTL for gimple basic block 2

;; _wrap_py_return_val ={v} 0;

(insn 7 6 0 rapl.c:56 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; in_wrapper.0 = in_wrapper;

(insn 8 7 0 rapl.c:57 (set (reg:SI 77 [ in_wrapper.0 ])
        (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])) -1 (nil))

;; if (in_wrapper.0 != 0)

(insn 9 8 10 rapl.c:57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ in_wrapper.0 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 10 9 0 rapl.c:57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.6412D.6412 = PMPI_Init (arg_0, arg_1);

(insn 12 11 13 rapl.c:57 (set (reg:DI 79)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 arg_1+0 S8 A64])) -1 (nil))

(insn 13 12 14 rapl.c:57 (set (reg:DI 80)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 arg_0+0 S8 A64])) -1 (nil))

(insn 14 13 15 rapl.c:57 (set (reg:DI 4 si)
        (reg:DI 79)) -1 (nil))

(insn 15 14 16 rapl.c:57 (set (reg:DI 5 di)
        (reg:DI 80)) -1 (nil))

(call_insn 16 15 17 rapl.c:57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Init") [flags 0x41]  <function_decl 0x7fed12f1bd00 PMPI_Init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 17 16 0 rapl.c:57 (set (reg:SI 75 [ D.6412 ])
        (reg:SI 0 ax)) -1 (nil))

;; D.6411D.6411 = D.6412D.6412;

(insn 18 17 0 rapl.c:57 (set (reg:SI 76 [ D.6411 ])
        (reg:SI 75 [ D.6412 ])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 21 20 22 2 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; in_wrapper ={v} 1;

(insn 23 22 0 rapl.c:58 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

;; fortran_init.1 = fortran_init;

(insn 24 23 0 rapl.c:60 (set (reg:SI 74 [ fortran_init.1 ])
        (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])) -1 (nil))

;; if (fortran_init.1 != 0)

(insn 25 24 26 rapl.c:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 74 [ fortran_init.1 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 26 25 0 rapl.c:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 5

;; if (PMPI_INIT == 0B)

(insn 28 27 29 rapl.c:62 (set (reg:DI 82)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("PMPI_INIT") [flags 0x41]  <function_decl 0x7fed12c28100 PMPI_INIT>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 29 28 30 rapl.c:62 (set (reg:DI 81)
        (reg:DI 82)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("PMPI_INIT") [flags 0x41]  <function_decl 0x7fed12c28100 PMPI_INIT>)
        (nil)))

(insn 30 29 31 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 81)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 31 30 0 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 6

;; if (pmpi_init == 0B)

(insn 33 32 34 rapl.c:62 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("pmpi_init") [flags 0x41]  <function_decl 0x7fed12c28000 pmpi_init>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 34 33 35 rapl.c:62 (set (reg:DI 83)
        (reg:DI 84)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("pmpi_init") [flags 0x41]  <function_decl 0x7fed12c28000 pmpi_init>)
        (nil)))

(insn 35 34 36 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 36 35 0 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 7

;; if (pmpi_init_ == 0B)

(insn 38 37 39 rapl.c:62 (set (reg:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("pmpi_init_") [flags 0x41]  <function_decl 0x7fed12c28200 pmpi_init_>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 39 38 40 rapl.c:62 (set (reg:DI 85)
        (reg:DI 86)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("pmpi_init_") [flags 0x41]  <function_decl 0x7fed12c28200 pmpi_init_>)
        (nil)))

(insn 40 39 41 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 85)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 41 40 0 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; if (pmpi_init__ == 0B)

(insn 43 42 44 rapl.c:62 (set (reg:DI 88)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("pmpi_init__") [flags 0x41]  <function_decl 0x7fed12c28300 pmpi_init__>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 44 43 45 rapl.c:62 (set (reg:DI 87)
        (reg:DI 88)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("pmpi_init__") [flags 0x41]  <function_decl 0x7fed12c28300 pmpi_init__>)
        (nil)))

(insn 45 44 46 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 87)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 46 45 0 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 9

;; stderr.2 = stderr;

(insn 48 47 49 rapl.c:63 (set (reg/f:DI 89)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7fed12d9faa0 stderr>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 49 48 0 rapl.c:63 (set (reg/f:DI 73 [ stderr.2 ])
        (mem/f/c/i:DI (reg/f:DI 89) [0 stderr+0 S8 A64])) -1 (nil))

;; stderr.3 = (struct FILE * restrict) stderr.2;

(insn 50 49 0 rapl.c:63 (set (reg/f:DI 72 [ stderr.3 ])
        (reg/f:DI 73 [ stderr.2 ])) -1 (nil))

;; D.6426D.6426 = (const char * restrict) "ERROR: Couldn\'t find fortran pmpi_init function.  Link against static library instead.\n";

(insn 51 50 0 rapl.c:63 (set (reg/f:DI 71 [ D.6426 ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <string_cst 0x7fed12caed00>)) -1 (nil))

;; __builtin_fwrite (D.6426D.6426, 1, 87, stderr.3);

(insn 52 51 53 rapl.c:63 (set (reg:DI 2 cx)
        (reg/f:DI 72 [ stderr.3 ])) -1 (nil))

(insn 53 52 54 rapl.c:63 (set (reg:DI 1 dx)
        (const_int 87 [0x57])) -1 (nil))

(insn 54 53 55 rapl.c:63 (set (reg:DI 4 si)
        (const_int 1 [0x1])) -1 (nil))

(insn 55 54 56 rapl.c:63 (set (reg:DI 5 di)
        (reg/f:DI 71 [ D.6426 ])) -1 (nil))

(call_insn 56 55 0 rapl.c:63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fed12fc2b00 __builtin_fwrite>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

;; exit (1);

(insn 57 56 58 rapl.c:64 (set (reg:SI 5 di)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 58 57 59 rapl.c:64 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fed12fd7c00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(barrier 59 58 0)

;; Generating RTL for gimple basic block 10

;; 

(code_label 60 59 61 5 "" [0 uses])

(note 61 60 0 NOTE_INSN_BASIC_BLOCK)

;; fortran_init.4 = fortran_init;

(insn 62 61 0 rapl.c:65 (set (reg:SI 70 [ fortran_init.4 ])
        (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])) -1 (nil))

;; switch (fortran_init.4) <default: <L15>, case 1: <L11>, case 2: <L12>, case 3: <L13>, case 4: <L14>>

(insn 63 62 64 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 64 63 65 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(insn 65 64 66 rapl.c:65 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 70 [ fortran_init.4 ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 66 65 67 rapl.c:65 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) -1 (nil))

(insn 67 66 68 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 1 [0x1]))) -1 (nil))

(jump_insn 68 67 69 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(jump_insn 69 68 70 rapl.c:65 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 70 69 71)

(code_label 71 70 72 11 "" [0 uses])

(insn 72 71 73 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 3 [0x3]))) -1 (nil))

(jump_insn 73 72 74 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(insn 74 73 75 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 4 [0x4]))) -1 (nil))

(jump_insn 75 74 76 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(jump_insn 76 75 77 rapl.c:65 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 77 76 0)

;; Generating RTL for gimple basic block 11

;; <L11>:

(code_label 78 77 79 7 "" [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; PMPI_INIT (&_wrap_py_return_val);

(insn 80 79 81 rapl.c:66 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 81 80 82 rapl.c:66 (set (reg:DI 5 di)
        (reg:DI 90)) -1 (nil))

(call_insn 82 81 0 rapl.c:66 (call (mem:QI (symbol_ref/i:DI ("PMPI_INIT") [flags 0x41]  <function_decl 0x7fed12c28100 PMPI_INIT>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 12

;; <L12>:

(code_label 85 84 86 8 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; pmpi_init (&_wrap_py_return_val);

(insn 87 86 88 rapl.c:67 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 88 87 89 rapl.c:67 (set (reg:DI 5 di)
        (reg:DI 91)) -1 (nil))

(call_insn 89 88 0 rapl.c:67 (call (mem:QI (symbol_ref/i:DI ("pmpi_init") [flags 0x41]  <function_decl 0x7fed12c28000 pmpi_init>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 13

;; <L13>:

(code_label 92 91 93 9 "" [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; pmpi_init_ (&_wrap_py_return_val);

(insn 94 93 95 rapl.c:68 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 95 94 96 rapl.c:68 (set (reg:DI 5 di)
        (reg:DI 92)) -1 (nil))

(call_insn 96 95 0 rapl.c:68 (call (mem:QI (symbol_ref/i:DI ("pmpi_init_") [flags 0x41]  <function_decl 0x7fed12c28200 pmpi_init_>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 14

;; <L14>:

(code_label 99 98 100 10 "" [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; pmpi_init__ (&_wrap_py_return_val);

(insn 101 100 102 rapl.c:69 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 102 101 103 rapl.c:69 (set (reg:DI 5 di)
        (reg:DI 93)) -1 (nil))

(call_insn 103 102 0 rapl.c:69 (call (mem:QI (symbol_ref/i:DI ("pmpi_init__") [flags 0x41]  <function_decl 0x7fed12c28300 pmpi_init__>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 15

;; <L15>:

(code_label 106 105 107 6 "" [0 uses])

(note 107 106 0 NOTE_INSN_BASIC_BLOCK)

;; stderr.5 = stderr;

(insn 108 107 109 rapl.c:71 (set (reg/f:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7fed12d9faa0 stderr>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 109 108 0 rapl.c:71 (set (reg/f:DI 69 [ stderr.5 ])
        (mem/f/c/i:DI (reg/f:DI 94) [0 stderr+0 S8 A64])) -1 (nil))

;; stderr.6 = (struct FILE * restrict) stderr.5;

(insn 110 109 0 rapl.c:71 (set (reg/f:DI 68 [ stderr.6 ])
        (reg/f:DI 69 [ stderr.5 ])) -1 (nil))

;; D.6430D.6430 = (const char * restrict) "NO SUITABLE FORTRAN MPI_INIT BINDING\n";

(insn 111 110 0 rapl.c:71 (set (reg/f:DI 67 [ D.6430 ])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <string_cst 0x7fed12b4ba00>)) -1 (nil))

;; __builtin_fwrite (D.6430D.6430, 1, 37, stderr.6);

(insn 112 111 113 rapl.c:71 (set (reg:DI 2 cx)
        (reg/f:DI 68 [ stderr.6 ])) -1 (nil))

(insn 113 112 114 rapl.c:71 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) -1 (nil))

(insn 114 113 115 rapl.c:71 (set (reg:DI 4 si)
        (const_int 1 [0x1])) -1 (nil))

(insn 115 114 116 rapl.c:71 (set (reg:DI 5 di)
        (reg/f:DI 67 [ D.6430 ])) -1 (nil))

(call_insn 116 115 0 rapl.c:71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fed12fc2b00 __builtin_fwrite>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

;; Generating RTL for gimple basic block 16

;; 

(code_label 117 116 118 12 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 17

;; 

(code_label 121 120 122 4 "" [0 uses])

(note 122 121 0 NOTE_INSN_BASIC_BLOCK)

;; _wrap_py_return_val.7 = PMPI_Init (arg_0, arg_1);

(insn 123 122 124 rapl.c:78 (set (reg:DI 95)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 arg_1+0 S8 A64])) -1 (nil))

(insn 124 123 125 rapl.c:78 (set (reg:DI 96)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 arg_0+0 S8 A64])) -1 (nil))

(insn 125 124 126 rapl.c:78 (set (reg:DI 4 si)
        (reg:DI 95)) -1 (nil))

(insn 126 125 127 rapl.c:78 (set (reg:DI 5 di)
        (reg:DI 96)) -1 (nil))

(call_insn 127 126 128 rapl.c:78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Init") [flags 0x41]  <function_decl 0x7fed12f1bd00 PMPI_Init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 128 127 0 rapl.c:78 (set (reg:SI 66 [ _wrap_py_return_val.7 ])
        (reg:SI 0 ax)) -1 (nil))

;; _wrap_py_return_val ={v} _wrap_py_return_val.7;

(insn 129 128 0 rapl.c:78 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 66 [ _wrap_py_return_val.7 ])) -1 (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 130 129 131 13 "" [0 uses])

(note 131 130 0 NOTE_INSN_BASIC_BLOCK)

;; rank ={v} -1;

(insn 132 131 0 rapl.c:81 (set (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) -1 (nil))

;; PMPI_Comm_rank (1140850688, &rank);

(insn 133 132 134 rapl.c:82 (set (reg:DI 4 si)
        (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>)) -1 (nil))

(insn 134 133 135 rapl.c:82 (set (reg:SI 5 di)
        (const_int 1140850688 [0x44000000])) -1 (nil))

(call_insn 135 134 0 rapl.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Comm_rank") [flags 0x41]  <function_decl 0x7fed12f0f500 PMPI_Comm_rank>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

;; retVal.8 = get_env_int (&"MSR_RANK_MOD"[0], &msr_rank_mod);

(insn 136 135 137 rapl.c:83 (set (reg:DI 4 si)
        (symbol_ref:DI ("msr_rank_mod") [flags 0x2]  <var_decl 0x7fed12c8eb40 msr_rank_mod>)) -1 (nil))

(insn 137 136 138 rapl.c:83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <string_cst 0x7fed12b48500>)) -1 (nil))

(call_insn 138 137 139 rapl.c:83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_env_int") [flags 0x41]  <function_decl 0x7fed12c9a200 get_env_int>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 139 138 0 rapl.c:83 (set (reg:SI 65 [ retVal.8 ])
        (reg:SI 0 ax)) -1 (nil))

;; retVal ={v} retVal.8;

(insn 140 139 141 rapl.c:83 (set (reg/f:DI 97)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("retVal")  <var_decl 0x7fed12c8eaa0 retVal>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 141 140 0 rapl.c:83 (set (mem/c/i:SI (reg/f:DI 97) [0 retVal+0 S4 A32])
        (reg:SI 65 [ retVal.8 ])) -1 (nil))

;; retVal.9 = retVal;

(insn 142 141 143 rapl.c:85 (set (reg/f:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("retVal")  <var_decl 0x7fed12c8eaa0 retVal>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 143 142 0 rapl.c:85 (set (reg:SI 64 [ retVal.9 ])
        (mem/c/i:SI (reg/f:DI 98) [0 retVal+0 S4 A32])) -1 (nil))

;; if (retVal.9 == -1)

(insn 144 143 145 rapl.c:85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ retVal.9 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(jump_insn 145 144 0 rapl.c:85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 19

;; __builtin_puts (&"Error: To run an MPI program, the MSR_RANK_MOD environment variable should be set."[0]);

(insn 147 146 148 rapl.c:86 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <string_cst 0x7fed12caee00>)) -1 (nil))

(call_insn 148 147 0 rapl.c:86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fed12fc5700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; exit (1);

(insn 149 148 150 rapl.c:87 (set (reg:SI 5 di)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 150 149 151 rapl.c:87 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fed12fd7c00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(barrier 151 150 0)

;; Generating RTL for gimple basic block 20

;; 

(code_label 152 151 153 14 "" [0 uses])

(note 153 152 0 NOTE_INSN_BASIC_BLOCK)

;; rank.10 = rank;

(insn 154 153 0 rapl.c:90 (set (reg:SI 63 [ rank.10 ])
        (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])) -1 (nil))

;; msr_rank_mod.11 = msr_rank_mod;

(insn 155 154 0 rapl.c:90 (set (reg:SI 62 [ msr_rank_mod.11 ])
        (mem/c/i:SI (symbol_ref:DI ("msr_rank_mod") [flags 0x2]  <var_decl 0x7fed12c8eb40 msr_rank_mod>) [0 msr_rank_mod+0 S4 A32])) -1 (nil))

;; D.6439D.6439 = rank.10 % msr_rank_mod.11;

(insn 156 155 157 rapl.c:90 (parallel [
            (set (reg:SI 100)
                (div:SI (reg:SI 63 [ rank.10 ])
                    (reg:SI 62 [ msr_rank_mod.11 ])))
            (set (reg:SI 99)
                (mod:SI (reg:SI 63 [ rank.10 ])
                    (reg:SI 62 [ msr_rank_mod.11 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 157 156 0 rapl.c:90 (set (reg:SI 61 [ D.6439 ])
        (reg:SI 99)) -1 (nil))

;; if (D.6439D.6439 == 0)

(insn 158 157 159 rapl.c:90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.6439 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 159 158 0 rapl.c:90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 21

;; gethostname (&hostname, 1024);

(insn 161 160 162 rapl.c:91 (set (reg:DI 4 si)
        (const_int 1024 [0x400])) -1 (nil))

(insn 162 161 163 rapl.c:91 (set (reg:DI 5 di)
        (symbol_ref:DI ("hostname") [flags 0x2]  <var_decl 0x7fed12c8e780 hostname>)) -1 (nil))

(call_insn 163 162 0 rapl.c:91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("gethostname") [flags 0x41]  <function_decl 0x7fed12c71a00 gethostname>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

;; rank.12 = rank;

(insn 164 163 0 rapl.c:93 (set (reg:SI 60 [ rank.12 ])
        (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])) -1 (nil))

;; D.6443D.6443 = (const char * restrict) "%s_rapl_%d";

(insn 165 164 0 rapl.c:93 (set (reg/f:DI 59 [ D.6443 ])
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <string_cst 0x7fed12b4d240>)) -1 (nil))

;; sprintf (&filetag, D.6443D.6443, &hostname, rank.12);

(insn 166 165 167 rapl.c:93 (set (reg:SI 2 cx)
        (reg:SI 60 [ rank.12 ])) -1 (nil))

(insn 167 166 168 rapl.c:93 (set (reg:DI 1 dx)
        (symbol_ref:DI ("hostname") [flags 0x2]  <var_decl 0x7fed12c8e780 hostname>)) -1 (nil))

(insn 168 167 169 rapl.c:93 (set (reg:DI 4 si)
        (reg/f:DI 59 [ D.6443 ])) -1 (nil))

(insn 169 168 170 rapl.c:93 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 170 169 171 rapl.c:93 (set (reg:DI 5 di)
        (reg:DI 101)) -1 (expr_list:REG_EQUAL (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
        (nil)))

(insn 171 170 172 rapl.c:93 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 172 171 0 rapl.c:93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7fed12fc7000 sprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

;; register_sig ();

(insn 173 172 174 rapl.c:95 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 174 173 0 rapl.c:95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("register_sig") [flags 0x41]  <function_decl 0x7fed12c9a500 register_sig>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

;; s.13 = rapl_init (&filetag);

(insn 175 174 176 rapl.c:99 (set (reg:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 176 175 177 rapl.c:99 (set (reg:DI 5 di)
        (reg:DI 102)) -1 (expr_list:REG_EQUAL (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
        (nil)))

(call_insn 177 176 178 rapl.c:99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rapl_init") [flags 0x41]  <function_decl 0x7fed12c88300 rapl_init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 178 177 0 rapl.c:99 (set (reg/f:DI 58 [ s.13 ])
        (reg:DI 0 ax)) -1 (nil))

;; s ={v} s.13;

(insn 179 178 180 rapl.c:99 (set (reg/f:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("s")  <var_decl 0x7fed12c8e960 s>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 180 179 0 rapl.c:99 (set (mem/f/c/i:DI (reg/f:DI 103) [0 s+0 S8 A64])
        (reg/f:DI 58 [ s.13 ])) -1 (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 181 180 182 15 "" [0 uses])

(note 182 181 0 NOTE_INSN_BASIC_BLOCK)

;; in_wrapper ={v} 0;

(insn 183 182 0 rapl.c:101 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; D.6411D.6411 = _wrap_py_return_val;

(insn 184 183 0 rapl.c:102 (set (reg:SI 76 [ D.6411 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 185 184 186 3 "" [0 uses])

(note 186 185 0 NOTE_INSN_BASIC_BLOCK)

;; return D.6411D.6411;

(insn 187 186 188 rapl.c:102 (set (reg:SI 78 [ <result> ])
        (reg:SI 76 [ D.6411 ])) -1 (nil))

(jump_insn 188 187 189 rapl.c:102 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 189 188 0)
Purged edges from bb 31


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 rapl.c:55 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 arg_0+0 S8 A64])
        (reg:DI 5 di [ arg_0 ])) -1 (nil))

(insn 3 2 4 2 rapl.c:55 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 arg_1+0 S8 A64])
        (reg:DI 4 si [ arg_1 ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 rapl.c:56 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 3 rapl.c:57 (set (reg:SI 77 [ in_wrapper.0 ])
        (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])) -1 (nil))

(insn 9 8 10 3 rapl.c:57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ in_wrapper.0 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 10 9 11 3 rapl.c:57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (nil))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 4 rapl.c:57 (set (reg:DI 79)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 arg_1+0 S8 A64])) -1 (nil))

(insn 13 12 14 4 rapl.c:57 (set (reg:DI 80)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 arg_0+0 S8 A64])) -1 (nil))

(insn 14 13 15 4 rapl.c:57 (set (reg:DI 4 si)
        (reg:DI 79)) -1 (nil))

(insn 15 14 16 4 rapl.c:57 (set (reg:DI 5 di)
        (reg:DI 80)) -1 (nil))

(call_insn 16 15 17 4 rapl.c:57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Init") [flags 0x41]  <function_decl 0x7fed12f1bd00 PMPI_Init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 17 16 18 4 rapl.c:57 (set (reg:SI 75 [ D.6412 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 18 17 19 4 rapl.c:57 (set (reg:SI 76 [ D.6411 ])
        (reg:SI 75 [ D.6412 ])) -1 (nil))

(jump_insn 19 18 20 4 rapl.c:57 (set (pc)
        (label_ref 185)) -1 (nil))
;; End of basic block 4 -> ( 30)

;; Succ edge  30

(barrier 20 19 21)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 21 20 22 5 2 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 rapl.c:58 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 24 23 25 5 rapl.c:60 (set (reg:SI 74 [ fortran_init.1 ])
        (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])) -1 (nil))

(insn 25 24 26 5 rapl.c:60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 74 [ fortran_init.1 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 26 25 27 5 rapl.c:60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (nil))
;; End of basic block 5 -> ( 6 24)

;; Succ edge  6 (fallthru)
;; Succ edge  24

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 rapl.c:62 (set (reg:DI 82)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("PMPI_INIT") [flags 0x41]  <function_decl 0x7fed12c28100 PMPI_INIT>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 29 28 30 6 rapl.c:62 (set (reg:DI 81)
        (reg:DI 82)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("PMPI_INIT") [flags 0x41]  <function_decl 0x7fed12c28100 PMPI_INIT>)
        (nil)))

(insn 30 29 31 6 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 81)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 31 30 32 6 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) -1 (nil))
;; End of basic block 6 -> ( 7 11)

;; Succ edge  7 (fallthru)
;; Succ edge  11

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 7 rapl.c:62 (set (reg:DI 84)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("pmpi_init") [flags 0x41]  <function_decl 0x7fed12c28000 pmpi_init>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 34 33 35 7 rapl.c:62 (set (reg:DI 83)
        (reg:DI 84)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("pmpi_init") [flags 0x41]  <function_decl 0x7fed12c28000 pmpi_init>)
        (nil)))

(insn 35 34 36 7 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 83)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 36 35 37 7 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) -1 (nil))
;; End of basic block 7 -> ( 8 11)

;; Succ edge  8 (fallthru)
;; Succ edge  11

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 8 rapl.c:62 (set (reg:DI 86)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("pmpi_init_") [flags 0x41]  <function_decl 0x7fed12c28200 pmpi_init_>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 39 38 40 8 rapl.c:62 (set (reg:DI 85)
        (reg:DI 86)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("pmpi_init_") [flags 0x41]  <function_decl 0x7fed12c28200 pmpi_init_>)
        (nil)))

(insn 40 39 41 8 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 85)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 41 40 42 8 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) -1 (nil))
;; End of basic block 8 -> ( 9 11)

;; Succ edge  9 (fallthru)
;; Succ edge  11

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 9 rapl.c:62 (set (reg:DI 88)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref/i:DI ("pmpi_init__") [flags 0x41]  <function_decl 0x7fed12c28300 pmpi_init__>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 44 43 45 9 rapl.c:62 (set (reg:DI 87)
        (reg:DI 88)) -1 (expr_list:REG_EQUAL (symbol_ref/i:DI ("pmpi_init__") [flags 0x41]  <function_decl 0x7fed12c28300 pmpi_init__>)
        (nil)))

(insn 45 44 46 9 rapl.c:62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 87)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 46 45 47 9 rapl.c:62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) -1 (nil))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 (fallthru)
;; Succ edge  11

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 10 rapl.c:63 (set (reg/f:DI 89)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7fed12d9faa0 stderr>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 49 48 50 10 rapl.c:63 (set (reg/f:DI 73 [ stderr.2 ])
        (mem/f/c/i:DI (reg/f:DI 89) [0 stderr+0 S8 A64])) -1 (nil))

(insn 50 49 51 10 rapl.c:63 (set (reg/f:DI 72 [ stderr.3 ])
        (reg/f:DI 73 [ stderr.2 ])) -1 (nil))

(insn 51 50 52 10 rapl.c:63 (set (reg/f:DI 71 [ D.6426 ])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <string_cst 0x7fed12caed00>)) -1 (nil))

(insn 52 51 53 10 rapl.c:63 (set (reg:DI 2 cx)
        (reg/f:DI 72 [ stderr.3 ])) -1 (nil))

(insn 53 52 54 10 rapl.c:63 (set (reg:DI 1 dx)
        (const_int 87 [0x57])) -1 (nil))

(insn 54 53 55 10 rapl.c:63 (set (reg:DI 4 si)
        (const_int 1 [0x1])) -1 (nil))

(insn 55 54 56 10 rapl.c:63 (set (reg:DI 5 di)
        (reg/f:DI 71 [ D.6426 ])) -1 (nil))

(call_insn 56 55 57 10 rapl.c:63 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fed12fc2b00 __builtin_fwrite>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))

(insn 57 56 58 10 rapl.c:64 (set (reg:SI 5 di)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 58 57 59 10 rapl.c:64 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fed12fd7c00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 10 -> ()


(barrier 59 58 60)

;; Start of basic block ( 6 7 8 9) -> 11
;; Pred edge  6
;; Pred edge  7
;; Pred edge  8
;; Pred edge  9
(code_label 60 59 61 11 5 "" [4 uses])

(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 11 rapl.c:65 (set (reg:SI 70 [ fortran_init.4 ])
        (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])) -1 (nil))

(insn 63 62 64 11 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 64 63 199 11 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) -1 (nil))
;; End of basic block 11 -> ( 19 12)

;; Succ edge  19
;; Succ edge  12 (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 199 64 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 65 199 66 12 rapl.c:65 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 70 [ fortran_init.4 ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 66 65 200 12 rapl.c:65 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) -1 (nil))
;; End of basic block 12 -> ( 15 13)

;; Succ edge  15
;; Succ edge  13 (fallthru)

;; Start of basic block ( 12) -> 13
;; Pred edge  12 (fallthru)
(note 200 66 67 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 67 200 68 13 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 1 [0x1]))) -1 (nil))

(jump_insn 68 67 201 13 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) -1 (nil))
;; End of basic block 13 -> ( 18 14)

;; Succ edge  18
;; Succ edge  14 (fallthru)

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(note 201 68 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 69 201 70 14 rapl.c:65 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 14 -> ( 22)

;; Succ edge  22

(barrier 70 69 71)

;; Start of basic block ( 12) -> 15
;; Pred edge  12
(code_label 71 70 202 15 11 "" [1 uses])

(note 202 71 72 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 72 202 73 15 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 3 [0x3]))) -1 (nil))

(jump_insn 73 72 203 15 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 92)
            (pc))) -1 (nil))
;; End of basic block 15 -> ( 20 16)

;; Succ edge  20
;; Succ edge  16 (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 (fallthru)
(note 203 73 74 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 74 203 75 16 rapl.c:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 70 [ fortran_init.4 ])
            (const_int 4 [0x4]))) -1 (nil))

(jump_insn 75 74 204 16 rapl.c:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) -1 (nil))
;; End of basic block 16 -> ( 21 17)

;; Succ edge  21
;; Succ edge  17 (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 204 75 76 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(jump_insn 76 204 77 17 rapl.c:65 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 17 -> ( 22)

;; Succ edge  22

(barrier 77 76 78)

;; Start of basic block ( 13) -> 18
;; Pred edge  13
(code_label 78 77 79 18 7 "" [1 uses])

(note 79 78 80 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 18 rapl.c:66 (parallel [
            (set (reg:DI 90)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 81 80 82 18 rapl.c:66 (set (reg:DI 5 di)
        (reg:DI 90)) -1 (nil))

(call_insn 82 81 83 18 rapl.c:66 (call (mem:QI (symbol_ref/i:DI ("PMPI_INIT") [flags 0x41]  <function_decl 0x7fed12c28100 PMPI_INIT>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(jump_insn 83 82 84 18 rapl.c:66 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 18 -> ( 23)

;; Succ edge  23

(barrier 84 83 85)

;; Start of basic block ( 11) -> 19
;; Pred edge  11
(code_label 85 84 86 19 8 "" [1 uses])

(note 86 85 87 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 19 rapl.c:67 (parallel [
            (set (reg:DI 91)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 88 87 89 19 rapl.c:67 (set (reg:DI 5 di)
        (reg:DI 91)) -1 (nil))

(call_insn 89 88 90 19 rapl.c:67 (call (mem:QI (symbol_ref/i:DI ("pmpi_init") [flags 0x41]  <function_decl 0x7fed12c28000 pmpi_init>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(jump_insn 90 89 91 19 rapl.c:67 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 19 -> ( 23)

;; Succ edge  23

(barrier 91 90 92)

;; Start of basic block ( 15) -> 20
;; Pred edge  15
(code_label 92 91 93 20 9 "" [1 uses])

(note 93 92 94 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 20 rapl.c:68 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 95 94 96 20 rapl.c:68 (set (reg:DI 5 di)
        (reg:DI 92)) -1 (nil))

(call_insn 96 95 97 20 rapl.c:68 (call (mem:QI (symbol_ref/i:DI ("pmpi_init_") [flags 0x41]  <function_decl 0x7fed12c28200 pmpi_init_>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(jump_insn 97 96 98 20 rapl.c:68 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 20 -> ( 23)

;; Succ edge  23

(barrier 98 97 99)

;; Start of basic block ( 16) -> 21
;; Pred edge  16
(code_label 99 98 100 21 10 "" [1 uses])

(note 100 99 101 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 21 rapl.c:69 (parallel [
            (set (reg:DI 93)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 102 101 103 21 rapl.c:69 (set (reg:DI 5 di)
        (reg:DI 93)) -1 (nil))

(call_insn 103 102 104 21 rapl.c:69 (call (mem:QI (symbol_ref/i:DI ("pmpi_init__") [flags 0x41]  <function_decl 0x7fed12c28300 pmpi_init__>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(jump_insn 104 103 105 21 rapl.c:69 (set (pc)
        (label_ref 117)) -1 (nil))
;; End of basic block 21 -> ( 23)

;; Succ edge  23

(barrier 105 104 106)

;; Start of basic block ( 17 14) -> 22
;; Pred edge  17
;; Pred edge  14
(code_label 106 105 107 22 6 "" [2 uses])

(note 107 106 108 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 22 rapl.c:71 (set (reg/f:DI 94)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7fed12d9faa0 stderr>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 109 108 110 22 rapl.c:71 (set (reg/f:DI 69 [ stderr.5 ])
        (mem/f/c/i:DI (reg/f:DI 94) [0 stderr+0 S8 A64])) -1 (nil))

(insn 110 109 111 22 rapl.c:71 (set (reg/f:DI 68 [ stderr.6 ])
        (reg/f:DI 69 [ stderr.5 ])) -1 (nil))

(insn 111 110 112 22 rapl.c:71 (set (reg/f:DI 67 [ D.6430 ])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <string_cst 0x7fed12b4ba00>)) -1 (nil))

(insn 112 111 113 22 rapl.c:71 (set (reg:DI 2 cx)
        (reg/f:DI 68 [ stderr.6 ])) -1 (nil))

(insn 113 112 114 22 rapl.c:71 (set (reg:DI 1 dx)
        (const_int 37 [0x25])) -1 (nil))

(insn 114 113 115 22 rapl.c:71 (set (reg:DI 4 si)
        (const_int 1 [0x1])) -1 (nil))

(insn 115 114 116 22 rapl.c:71 (set (reg:DI 5 di)
        (reg/f:DI 67 [ D.6430 ])) -1 (nil))

(call_insn 116 115 117 22 rapl.c:71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7fed12fc2b00 __builtin_fwrite>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (nil))))))
;; End of basic block 22 -> ( 23)

;; Succ edge  23 (fallthru)

;; Start of basic block ( 18 19 20 21 22) -> 23
;; Pred edge  18
;; Pred edge  19
;; Pred edge  20
;; Pred edge  21
;; Pred edge  22 (fallthru)
(code_label 117 116 118 23 12 "" [4 uses])

(note 118 117 119 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(jump_insn 119 118 120 23 rapl.c:71 (set (pc)
        (label_ref 130)) -1 (nil))
;; End of basic block 23 -> ( 25)

;; Succ edge  25

(barrier 120 119 121)

;; Start of basic block ( 5) -> 24
;; Pred edge  5
(code_label 121 120 122 24 4 "" [1 uses])

(note 122 121 123 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 24 rapl.c:78 (set (reg:DI 95)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 arg_1+0 S8 A64])) -1 (nil))

(insn 124 123 125 24 rapl.c:78 (set (reg:DI 96)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 arg_0+0 S8 A64])) -1 (nil))

(insn 125 124 126 24 rapl.c:78 (set (reg:DI 4 si)
        (reg:DI 95)) -1 (nil))

(insn 126 125 127 24 rapl.c:78 (set (reg:DI 5 di)
        (reg:DI 96)) -1 (nil))

(call_insn 127 126 128 24 rapl.c:78 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Init") [flags 0x41]  <function_decl 0x7fed12f1bd00 PMPI_Init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 128 127 129 24 rapl.c:78 (set (reg:SI 66 [ _wrap_py_return_val.7 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 129 128 130 24 rapl.c:78 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 66 [ _wrap_py_return_val.7 ])) -1 (nil))
;; End of basic block 24 -> ( 25)

;; Succ edge  25 (fallthru)

;; Start of basic block ( 23 24) -> 25
;; Pred edge  23
;; Pred edge  24 (fallthru)
(code_label 130 129 131 25 13 "" [1 uses])

(note 131 130 132 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 25 rapl.c:81 (set (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])
        (const_int -1 [0xffffffffffffffff])) -1 (nil))

(insn 133 132 134 25 rapl.c:82 (set (reg:DI 4 si)
        (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>)) -1 (nil))

(insn 134 133 135 25 rapl.c:82 (set (reg:SI 5 di)
        (const_int 1140850688 [0x44000000])) -1 (nil))

(call_insn 135 134 136 25 rapl.c:82 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Comm_rank") [flags 0x41]  <function_decl 0x7fed12f0f500 PMPI_Comm_rank>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 136 135 137 25 rapl.c:83 (set (reg:DI 4 si)
        (symbol_ref:DI ("msr_rank_mod") [flags 0x2]  <var_decl 0x7fed12c8eb40 msr_rank_mod>)) -1 (nil))

(insn 137 136 138 25 rapl.c:83 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <string_cst 0x7fed12b48500>)) -1 (nil))

(call_insn 138 137 139 25 rapl.c:83 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("get_env_int") [flags 0x41]  <function_decl 0x7fed12c9a200 get_env_int>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 139 138 140 25 rapl.c:83 (set (reg:SI 65 [ retVal.8 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 140 139 141 25 rapl.c:83 (set (reg/f:DI 97)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("retVal")  <var_decl 0x7fed12c8eaa0 retVal>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 141 140 142 25 rapl.c:83 (set (mem/c/i:SI (reg/f:DI 97) [0 retVal+0 S4 A32])
        (reg:SI 65 [ retVal.8 ])) -1 (nil))

(insn 142 141 143 25 rapl.c:85 (set (reg/f:DI 98)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("retVal")  <var_decl 0x7fed12c8eaa0 retVal>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 143 142 144 25 rapl.c:85 (set (reg:SI 64 [ retVal.9 ])
        (mem/c/i:SI (reg/f:DI 98) [0 retVal+0 S4 A32])) -1 (nil))

(insn 144 143 145 25 rapl.c:85 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 64 [ retVal.9 ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(jump_insn 145 144 146 25 rapl.c:85 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 152)
            (pc))) -1 (nil))
;; End of basic block 25 -> ( 26 27)

;; Succ edge  26 (fallthru)
;; Succ edge  27

;; Start of basic block ( 25) -> 26
;; Pred edge  25 (fallthru)
(note 146 145 147 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 147 146 148 26 rapl.c:86 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <string_cst 0x7fed12caee00>)) -1 (nil))

(call_insn 148 147 149 26 rapl.c:86 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7fed12fc5700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 149 148 150 26 rapl.c:87 (set (reg:SI 5 di)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 150 149 151 26 rapl.c:87 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7fed12fd7c00 exit>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_NORETURN (const_int 0 [0x0])
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))
;; End of basic block 26 -> ()


(barrier 151 150 152)

;; Start of basic block ( 25) -> 27
;; Pred edge  25
(code_label 152 151 153 27 14 "" [1 uses])

(note 153 152 154 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 154 153 155 27 rapl.c:90 (set (reg:SI 63 [ rank.10 ])
        (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])) -1 (nil))

(insn 155 154 156 27 rapl.c:90 (set (reg:SI 62 [ msr_rank_mod.11 ])
        (mem/c/i:SI (symbol_ref:DI ("msr_rank_mod") [flags 0x2]  <var_decl 0x7fed12c8eb40 msr_rank_mod>) [0 msr_rank_mod+0 S4 A32])) -1 (nil))

(insn 156 155 157 27 rapl.c:90 (parallel [
            (set (reg:SI 100)
                (div:SI (reg:SI 63 [ rank.10 ])
                    (reg:SI 62 [ msr_rank_mod.11 ])))
            (set (reg:SI 99)
                (mod:SI (reg:SI 63 [ rank.10 ])
                    (reg:SI 62 [ msr_rank_mod.11 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 157 156 158 27 rapl.c:90 (set (reg:SI 61 [ D.6439 ])
        (reg:SI 99)) -1 (nil))

(insn 158 157 159 27 rapl.c:90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ D.6439 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 159 158 160 27 rapl.c:90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 181)
            (pc))) -1 (nil))
;; End of basic block 27 -> ( 28 29)

;; Succ edge  28 (fallthru)
;; Succ edge  29

;; Start of basic block ( 27) -> 28
;; Pred edge  27 (fallthru)
(note 160 159 161 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 28 rapl.c:91 (set (reg:DI 4 si)
        (const_int 1024 [0x400])) -1 (nil))

(insn 162 161 163 28 rapl.c:91 (set (reg:DI 5 di)
        (symbol_ref:DI ("hostname") [flags 0x2]  <var_decl 0x7fed12c8e780 hostname>)) -1 (nil))

(call_insn 163 162 164 28 rapl.c:91 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("gethostname") [flags 0x41]  <function_decl 0x7fed12c71a00 gethostname>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 164 163 165 28 rapl.c:93 (set (reg:SI 60 [ rank.12 ])
        (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])) -1 (nil))

(insn 165 164 166 28 rapl.c:93 (set (reg/f:DI 59 [ D.6443 ])
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <string_cst 0x7fed12b4d240>)) -1 (nil))

(insn 166 165 167 28 rapl.c:93 (set (reg:SI 2 cx)
        (reg:SI 60 [ rank.12 ])) -1 (nil))

(insn 167 166 168 28 rapl.c:93 (set (reg:DI 1 dx)
        (symbol_ref:DI ("hostname") [flags 0x2]  <var_decl 0x7fed12c8e780 hostname>)) -1 (nil))

(insn 168 167 169 28 rapl.c:93 (set (reg:DI 4 si)
        (reg/f:DI 59 [ D.6443 ])) -1 (nil))

(insn 169 168 170 28 rapl.c:93 (set (reg:DI 101)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 170 169 171 28 rapl.c:93 (set (reg:DI 5 di)
        (reg:DI 101)) -1 (expr_list:REG_EQUAL (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
        (nil)))

(insn 171 170 172 28 rapl.c:93 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 172 171 173 28 rapl.c:93 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sprintf") [flags 0x41]  <function_decl 0x7fed12fc7000 sprintf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 2 cx))
                        (nil)))))))

(insn 173 172 174 28 rapl.c:95 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 174 173 175 28 rapl.c:95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("register_sig") [flags 0x41]  <function_decl 0x7fed12c9a500 register_sig>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 175 174 176 28 rapl.c:99 (set (reg:DI 102)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 176 175 177 28 rapl.c:99 (set (reg:DI 5 di)
        (reg:DI 102)) -1 (expr_list:REG_EQUAL (symbol_ref:DI ("filetag")  <var_decl 0x7fed12c8ea00 filetag>)
        (nil)))

(call_insn 177 176 178 28 rapl.c:99 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rapl_init") [flags 0x41]  <function_decl 0x7fed12c88300 rapl_init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 178 177 179 28 rapl.c:99 (set (reg/f:DI 58 [ s.13 ])
        (reg:DI 0 ax)) -1 (nil))

(insn 179 178 180 28 rapl.c:99 (set (reg/f:DI 103)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("s")  <var_decl 0x7fed12c8e960 s>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 180 179 181 28 rapl.c:99 (set (mem/f/c/i:DI (reg/f:DI 103) [0 s+0 S8 A64])
        (reg/f:DI 58 [ s.13 ])) -1 (nil))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 (fallthru)

;; Start of basic block ( 27 28) -> 29
;; Pred edge  27
;; Pred edge  28 (fallthru)
(code_label 181 180 182 29 15 "" [1 uses])

(note 182 181 183 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 184 29 rapl.c:101 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 184 183 185 29 rapl.c:102 (set (reg:SI 76 [ D.6411 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))
;; End of basic block 29 -> ( 30)

;; Succ edge  30 (fallthru)

;; Start of basic block ( 4 29) -> 30
;; Pred edge  4
;; Pred edge  29 (fallthru)
(code_label 185 184 186 30 3 "" [1 uses])

(note 186 185 187 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 187 186 188 30 rapl.c:102 (set (reg:SI 78 [ <result> ])
        (reg:SI 76 [ D.6411 ])) -1 (nil))

(jump_insn 188 187 189 30 rapl.c:102 (set (pc)
        (label_ref 190)) -1 (nil))
;; End of basic block 30 -> ( 32)

;; Succ edge  32

(barrier 189 188 198)

;; Start of basic block () -> 31
(note 198 189 192 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 192 198 193 31 rapl.c:103 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 193 192 194 31 rapl.c:103 (clobber (reg:SI 78 [ <result> ])) -1 (nil))

(jump_insn 194 193 195 31 rapl.c:103 (set (pc)
        (label_ref 196)) -1 (nil))
;; End of basic block 31 -> ( 33)

;; Succ edge  33

(barrier 195 194 190)

;; Start of basic block ( 30) -> 32
;; Pred edge  30
(code_label 190 195 205 32 1 "" [1 uses])

(note 205 190 191 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 191 205 196 32 rapl.c:103 (set (reg/i:SI 0 ax)
        (reg:SI 78 [ <result> ])) -1 (nil))
;; End of basic block 32 -> ( 33)

;; Succ edge  33 (fallthru)

;; Start of basic block ( 31 32) -> 33
;; Pred edge  31
;; Pred edge  32 (fallthru)
(code_label 196 191 206 33 16 "" [1 uses])

(note 206 196 197 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 197 206 0 33 rapl.c:103 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 33 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function MPI_Init_fortran_wrapper (MPI_Init_fortran_wrapper)


;; Generating RTL for gimple basic block 2

;; argc ={v} 0;

(insn 6 5 0 rapl.c:107 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 argc+0 S4 A64])
        (const_int 0 [0x0])) -1 (nil))

;; argv ={v} 0B;

(insn 7 6 0 rapl.c:108 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 argv+0 S8 A64])
        (const_int 0 [0x0])) -1 (nil))

;; _wrap_py_return_val = 0;

(insn 8 7 0 rapl.c:109 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; _wrap_py_return_val.14 = MPI_Init (&argc, &argv);

(insn 9 8 10 rapl.c:110 (parallel [
            (set (reg:DI 59)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 10 9 11 rapl.c:110 (parallel [
            (set (reg:DI 60)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 11 10 12 rapl.c:110 (set (reg:DI 4 si)
        (reg:DI 59)) -1 (nil))

(insn 12 11 13 rapl.c:110 (set (reg:DI 5 di)
        (reg:DI 60)) -1 (nil))

(call_insn 13 12 14 rapl.c:110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MPI_Init") [flags 0x1]  <function_decl 0x7fed12eb2c00 MPI_Init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 14 13 0 rapl.c:110 (set (reg:SI 58 [ _wrap_py_return_val.14 ])
        (reg:SI 0 ax)) -1 (nil))

;; _wrap_py_return_val = _wrap_py_return_val.14;

(insn 15 14 0 rapl.c:110 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 58 [ _wrap_py_return_val.14 ])) -1 (nil))

;; *ierr ={v} _wrap_py_return_val;

(insn 16 15 17 rapl.c:111 (set (reg/f:DI 61)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 17 16 18 rapl.c:111 (set (reg:SI 62)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))

(insn 18 17 0 rapl.c:111 (set (mem:SI (reg/f:DI 61) [0 S4 A32])
        (reg:SI 62)) -1 (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:106 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:107 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 argc+0 S4 A64])
        (const_int 0 [0x0])) -1 (nil))

(insn 7 6 8 3 rapl.c:108 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 argv+0 S8 A64])
        (const_int 0 [0x0])) -1 (nil))

(insn 8 7 9 3 rapl.c:109 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 9 8 10 3 rapl.c:110 (parallel [
            (set (reg:DI 59)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 10 9 11 3 rapl.c:110 (parallel [
            (set (reg:DI 60)
                (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 11 10 12 3 rapl.c:110 (set (reg:DI 4 si)
        (reg:DI 59)) -1 (nil))

(insn 12 11 13 3 rapl.c:110 (set (reg:DI 5 di)
        (reg:DI 60)) -1 (nil))

(call_insn 13 12 14 3 rapl.c:110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MPI_Init") [flags 0x1]  <function_decl 0x7fed12eb2c00 MPI_Init>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (nil))))

(insn 14 13 15 3 rapl.c:110 (set (reg:SI 58 [ _wrap_py_return_val.14 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 15 14 16 3 rapl.c:110 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 58 [ _wrap_py_return_val.14 ])) -1 (nil))

(insn 16 15 17 3 rapl.c:111 (set (reg/f:DI 61)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 17 16 18 3 rapl.c:111 (set (reg:SI 62)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))

(insn 18 17 23 3 rapl.c:111 (set (mem:SI (reg/f:DI 61) [0 S4 A32])
        (reg:SI 62)) -1 (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 23 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 20 23 21 4 rapl.c:112 (set (pc)
        (label_ref 22)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 21 20 19)

;; Start of basic block () -> 5
(code_label 19 21 24 5 17 "" [0 uses])

(note 24 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 22 24 25 6 18 "" [1 uses])

(note 25 22 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function MPI_INIT (MPI_INIT)


;; Generating RTL for gimple basic block 2

;; fortran_init ={v} 1;

(insn 6 5 0 rapl.c:115 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

;; MPI_Init_fortran_wrapper (ierr);

(insn 7 6 8 rapl.c:116 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 rapl.c:116 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 0 rapl.c:116 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:114 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:115 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 7 6 8 3 rapl.c:116 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 3 rapl.c:116 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 14 3 rapl.c:116 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 14 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 11 14 12 4 rapl.c:117 (set (pc)
        (label_ref 13)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 12 11 10)

;; Start of basic block () -> 5
(code_label 10 12 15 5 19 "" [0 uses])

(note 15 10 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 13 15 16 6 20 "" [1 uses])

(note 16 13 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mpi_init (mpi_init)


;; Generating RTL for gimple basic block 2

;; fortran_init ={v} 2;

(insn 6 5 0 rapl.c:120 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 2 [0x2])) -1 (nil))

;; MPI_Init_fortran_wrapper (ierr);

(insn 7 6 8 rapl.c:121 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 rapl.c:121 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 0 rapl.c:121 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:119 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:120 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 2 [0x2])) -1 (nil))

(insn 7 6 8 3 rapl.c:121 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 3 rapl.c:121 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 14 3 rapl.c:121 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 14 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 11 14 12 4 rapl.c:122 (set (pc)
        (label_ref 13)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 12 11 10)

;; Start of basic block () -> 5
(code_label 10 12 15 5 21 "" [0 uses])

(note 15 10 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 13 15 16 6 22 "" [1 uses])

(note 16 13 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mpi_init_ (mpi_init_)


;; Generating RTL for gimple basic block 2

;; fortran_init ={v} 3;

(insn 6 5 0 rapl.c:125 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 3 [0x3])) -1 (nil))

;; MPI_Init_fortran_wrapper (ierr);

(insn 7 6 8 rapl.c:126 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 rapl.c:126 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 0 rapl.c:126 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:124 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:125 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 3 [0x3])) -1 (nil))

(insn 7 6 8 3 rapl.c:126 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 3 rapl.c:126 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 14 3 rapl.c:126 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 14 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 11 14 12 4 rapl.c:127 (set (pc)
        (label_ref 13)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 12 11 10)

;; Start of basic block () -> 5
(code_label 10 12 15 5 23 "" [0 uses])

(note 15 10 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 13 15 16 6 24 "" [1 uses])

(note 16 13 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mpi_init__ (mpi_init__)


;; Generating RTL for gimple basic block 2

;; fortran_init ={v} 4;

(insn 6 5 0 rapl.c:130 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 4 [0x4])) -1 (nil))

;; MPI_Init_fortran_wrapper (ierr);

(insn 7 6 8 rapl.c:131 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 rapl.c:131 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 0 rapl.c:131 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:129 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:130 (set (mem/c/i:SI (symbol_ref:DI ("fortran_init") [flags 0x2]  <var_decl 0x7fed12c8ebe0 fortran_init>) [0 fortran_init+0 S4 A32])
        (const_int 4 [0x4])) -1 (nil))

(insn 7 6 8 3 rapl.c:131 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 8 7 9 3 rapl.c:131 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 9 8 14 3 rapl.c:131 (call (mem:QI (symbol_ref:DI ("MPI_Init_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12c9a800 MPI_Init_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 14 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 11 14 12 4 rapl.c:132 (set (pc)
        (label_ref 13)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 12 11 10)

;; Start of basic block () -> 5
(code_label 10 12 15 5 25 "" [0 uses])

(note 15 10 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 13 15 16 6 26 "" [1 uses])

(note 16 13 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function MPI_Finalize (MPI_Finalize)


;; Generating RTL for gimple basic block 2

;; _wrap_py_return_val = 0;

(insn 5 4 0 rapl.c:142 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; in_wrapper.15 = in_wrapper;

(insn 6 5 0 rapl.c:143 (set (reg:SI 65 [ in_wrapper.15 ])
        (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])) -1 (nil))

;; if (in_wrapper.15 != 0)

(insn 7 6 8 rapl.c:143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 65 [ in_wrapper.15 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 0 rapl.c:143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.6473D.6473 = PMPI_Finalize ();

(call_insn 10 9 11 rapl.c:143 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Finalize") [flags 0x41]  <function_decl 0x7fed12f1be00 PMPI_Finalize>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 11 10 0 rapl.c:143 (set (reg:SI 63 [ D.6473 ])
        (reg:SI 0 ax)) -1 (nil))

;; D.6472D.6472 = D.6473D.6473;

(insn 12 11 0 rapl.c:143 (set (reg:SI 64 [ D.6472 ])
        (reg:SI 63 [ D.6473 ])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 28 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; in_wrapper ={v} 1;

(insn 17 16 0 rapl.c:144 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

;; rank.16 = rank;

(insn 18 17 0 rapl.c:147 (set (reg:SI 62 [ rank.16 ])
        (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])) -1 (nil))

;; msr_rank_mod.17 = msr_rank_mod;

(insn 19 18 0 rapl.c:147 (set (reg:SI 61 [ msr_rank_mod.17 ])
        (mem/c/i:SI (symbol_ref:DI ("msr_rank_mod") [flags 0x2]  <var_decl 0x7fed12c8eb40 msr_rank_mod>) [0 msr_rank_mod+0 S4 A32])) -1 (nil))

;; D.6476D.6476 = rank.16 % msr_rank_mod.17;

(insn 20 19 21 rapl.c:147 (parallel [
            (set (reg:SI 68)
                (div:SI (reg:SI 62 [ rank.16 ])
                    (reg:SI 61 [ msr_rank_mod.17 ])))
            (set (reg:SI 67)
                (mod:SI (reg:SI 62 [ rank.16 ])
                    (reg:SI 61 [ msr_rank_mod.17 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 21 20 0 rapl.c:147 (set (reg:SI 60 [ D.6476 ])
        (reg:SI 67)) -1 (nil))

;; if (D.6476D.6476 == 0)

(insn 22 21 23 rapl.c:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.6476 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 0 rapl.c:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 5

;; s.18 = s;

(insn 25 24 26 rapl.c:148 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("s")  <var_decl 0x7fed12c8e960 s>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 26 25 0 rapl.c:148 (set (reg/f:DI 59 [ s.18 ])
        (mem/f/c/i:DI (reg/f:DI 69) [0 s+0 S8 A64])) -1 (nil))

;; rapl_finalize (s.18, 1);

(insn 27 26 28 rapl.c:148 (set (reg:SI 4 si)
        (const_int 1 [0x1])) -1 (nil))

(insn 28 27 29 rapl.c:148 (set (reg:DI 5 di)
        (reg/f:DI 59 [ s.18 ])) -1 (nil))

(call_insn 29 28 0 rapl.c:148 (call (mem:QI (symbol_ref:DI ("rapl_finalize") [flags 0x41]  <function_decl 0x7fed12c88400 rapl_finalize>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 6

;; 

(code_label 30 29 31 30 "" [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; _wrap_py_return_val.19 = PMPI_Finalize ();

(call_insn 32 31 33 rapl.c:150 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Finalize") [flags 0x41]  <function_decl 0x7fed12f1be00 PMPI_Finalize>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 33 32 0 rapl.c:150 (set (reg:SI 58 [ _wrap_py_return_val.19 ])
        (reg:SI 0 ax)) -1 (nil))

;; _wrap_py_return_val = _wrap_py_return_val.19;

(insn 34 33 0 rapl.c:150 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 58 [ _wrap_py_return_val.19 ])) -1 (nil))

;; in_wrapper ={v} 0;

(insn 35 34 0 rapl.c:151 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; D.6472D.6472 = _wrap_py_return_val;

(insn 36 35 0 rapl.c:152 (set (reg:SI 64 [ D.6472 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 37 36 38 29 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; return D.6472D.6472;

(insn 39 38 40 rapl.c:152 (set (reg:SI 66 [ <result> ])
        (reg:SI 64 [ D.6472 ])) -1 (nil))

(jump_insn 40 39 41 rapl.c:152 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 41 40 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 rapl.c:142 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 6 5 7 3 rapl.c:143 (set (reg:SI 65 [ in_wrapper.15 ])
        (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 rapl.c:143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 65 [ in_wrapper.15 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 9 3 rapl.c:143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) -1 (nil))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 10 9 11 4 rapl.c:143 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Finalize") [flags 0x41]  <function_decl 0x7fed12f1be00 PMPI_Finalize>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 11 10 12 4 rapl.c:143 (set (reg:SI 63 [ D.6473 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 12 11 13 4 rapl.c:143 (set (reg:SI 64 [ D.6472 ])
        (reg:SI 63 [ D.6473 ])) -1 (nil))

(jump_insn 13 12 14 4 rapl.c:143 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 4 -> ( 8)

;; Succ edge  8

(barrier 14 13 15)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 15 14 16 5 28 "" [1 uses])

(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 rapl.c:144 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 18 17 19 5 rapl.c:147 (set (reg:SI 62 [ rank.16 ])
        (mem/c/i:SI (symbol_ref:DI ("rank") [flags 0x2]  <var_decl 0x7fed12c8e6e0 rank>) [0 rank+0 S4 A32])) -1 (nil))

(insn 19 18 20 5 rapl.c:147 (set (reg:SI 61 [ msr_rank_mod.17 ])
        (mem/c/i:SI (symbol_ref:DI ("msr_rank_mod") [flags 0x2]  <var_decl 0x7fed12c8eb40 msr_rank_mod>) [0 msr_rank_mod+0 S4 A32])) -1 (nil))

(insn 20 19 21 5 rapl.c:147 (parallel [
            (set (reg:SI 68)
                (div:SI (reg:SI 62 [ rank.16 ])
                    (reg:SI 61 [ msr_rank_mod.17 ])))
            (set (reg:SI 67)
                (mod:SI (reg:SI 62 [ rank.16 ])
                    (reg:SI 61 [ msr_rank_mod.17 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 21 20 22 5 rapl.c:147 (set (reg:SI 60 [ D.6476 ])
        (reg:SI 67)) -1 (nil))

(insn 22 21 23 5 rapl.c:147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ D.6476 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 24 5 rapl.c:147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) -1 (nil))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 rapl.c:148 (set (reg/f:DI 69)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("s")  <var_decl 0x7fed12c8e960 s>)
                    ] 2)) [0 S8 A8])) -1 (nil))

(insn 26 25 27 6 rapl.c:148 (set (reg/f:DI 59 [ s.18 ])
        (mem/f/c/i:DI (reg/f:DI 69) [0 s+0 S8 A64])) -1 (nil))

(insn 27 26 28 6 rapl.c:148 (set (reg:SI 4 si)
        (const_int 1 [0x1])) -1 (nil))

(insn 28 27 29 6 rapl.c:148 (set (reg:DI 5 di)
        (reg/f:DI 59 [ s.18 ])) -1 (nil))

(call_insn 29 28 30 6 rapl.c:148 (call (mem:QI (symbol_ref:DI ("rapl_finalize") [flags 0x41]  <function_decl 0x7fed12c88400 rapl_finalize>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 30 29 31 7 30 "" [1 uses])

(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn 32 31 33 7 rapl.c:150 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("PMPI_Finalize") [flags 0x41]  <function_decl 0x7fed12f1be00 PMPI_Finalize>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 33 32 34 7 rapl.c:150 (set (reg:SI 58 [ _wrap_py_return_val.19 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 34 33 35 7 rapl.c:150 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 58 [ _wrap_py_return_val.19 ])) -1 (nil))

(insn 35 34 36 7 rapl.c:151 (set (mem/c/i:SI (symbol_ref:DI ("in_wrapper") [flags 0x2]  <var_decl 0x7fed12e05460 in_wrapper>) [0 in_wrapper+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(insn 36 35 37 7 rapl.c:152 (set (reg:SI 64 [ D.6472 ])
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 4 7) -> 8
;; Pred edge  4
;; Pred edge  7 (fallthru)
(code_label 37 36 38 8 29 "" [1 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 8 rapl.c:152 (set (reg:SI 66 [ <result> ])
        (reg:SI 64 [ D.6472 ])) -1 (nil))

(jump_insn 40 39 41 8 rapl.c:152 (set (pc)
        (label_ref 42)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10

(barrier 41 40 50)

;; Start of basic block () -> 9
(note 50 41 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 50 45 9 rapl.c:153 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 45 44 46 9 rapl.c:153 (clobber (reg:SI 66 [ <result> ])) -1 (nil))

(jump_insn 46 45 47 9 rapl.c:153 (set (pc)
        (label_ref 48)) -1 (nil))
;; End of basic block 9 -> ( 11)

;; Succ edge  11

(barrier 47 46 42)

;; Start of basic block ( 8) -> 10
;; Pred edge  8
(code_label 42 47 51 10 27 "" [1 uses])

(note 51 42 43 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 43 51 48 10 rapl.c:153 (set (reg/i:SI 0 ax)
        (reg:SI 66 [ <result> ])) -1 (nil))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9
;; Pred edge  10 (fallthru)
(code_label 48 43 52 11 31 "" [1 uses])

(note 52 48 49 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 49 52 0 11 rapl.c:153 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function MPI_Finalize_fortran_wrapper (MPI_Finalize_fortran_wrapper)


;; Generating RTL for gimple basic block 2

;; _wrap_py_return_val = 0;

(insn 6 5 0 rapl.c:157 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; _wrap_py_return_val.20 = MPI_Finalize ();

(call_insn 7 6 8 rapl.c:158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MPI_Finalize") [flags 0x1]  <function_decl 0x7fed12eb2d00 MPI_Finalize>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 8 7 0 rapl.c:158 (set (reg:SI 58 [ _wrap_py_return_val.20 ])
        (reg:SI 0 ax)) -1 (nil))

;; _wrap_py_return_val = _wrap_py_return_val.20;

(insn 9 8 0 rapl.c:158 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 58 [ _wrap_py_return_val.20 ])) -1 (nil))

;; *ierr ={v} _wrap_py_return_val;

(insn 10 9 11 rapl.c:159 (set (reg/f:DI 59)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 11 10 12 rapl.c:159 (set (reg:SI 60)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))

(insn 12 11 0 rapl.c:159 (set (mem:SI (reg/f:DI 59) [0 S4 A32])
        (reg:SI 60)) -1 (nil))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:156 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:157 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(call_insn 7 6 8 3 rapl.c:158 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("MPI_Finalize") [flags 0x1]  <function_decl 0x7fed12eb2d00 MPI_Finalize>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (nil))

(insn 8 7 9 3 rapl.c:158 (set (reg:SI 58 [ _wrap_py_return_val.20 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 9 8 10 3 rapl.c:158 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])
        (reg:SI 58 [ _wrap_py_return_val.20 ])) -1 (nil))

(insn 10 9 11 3 rapl.c:159 (set (reg/f:DI 59)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 11 10 12 3 rapl.c:159 (set (reg:SI 60)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 _wrap_py_return_val+0 S4 A32])) -1 (nil))

(insn 12 11 17 3 rapl.c:159 (set (mem:SI (reg/f:DI 59) [0 S4 A32])
        (reg:SI 60)) -1 (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 17 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 14 17 15 4 rapl.c:160 (set (pc)
        (label_ref 16)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 15 14 13)

;; Start of basic block () -> 5
(code_label 13 15 18 5 32 "" [0 uses])

(note 18 13 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 16 18 19 6 33 "" [1 uses])

(note 19 16 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function MPI_FINALIZE (MPI_FINALIZE)


;; Generating RTL for gimple basic block 2

;; MPI_Finalize_fortran_wrapper (ierr);

(insn 6 5 7 rapl.c:163 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 rapl.c:163 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 0 rapl.c:163 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:162 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:163 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 3 rapl.c:163 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 13 3 rapl.c:163 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 10 13 11 4 rapl.c:164 (set (pc)
        (label_ref 12)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 11 10 9)

;; Start of basic block () -> 5
(code_label 9 11 14 5 34 "" [0 uses])

(note 14 9 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 12 14 15 6 35 "" [1 uses])

(note 15 12 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mpi_finalize (mpi_finalize)


;; Generating RTL for gimple basic block 2

;; MPI_Finalize_fortran_wrapper (ierr);

(insn 6 5 7 rapl.c:167 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 rapl.c:167 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 0 rapl.c:167 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:166 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:167 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 3 rapl.c:167 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 13 3 rapl.c:167 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 10 13 11 4 rapl.c:168 (set (pc)
        (label_ref 12)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 11 10 9)

;; Start of basic block () -> 5
(code_label 9 11 14 5 36 "" [0 uses])

(note 14 9 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 12 14 15 6 37 "" [1 uses])

(note 15 12 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mpi_finalize_ (mpi_finalize_)


;; Generating RTL for gimple basic block 2

;; MPI_Finalize_fortran_wrapper (ierr);

(insn 6 5 7 rapl.c:171 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 rapl.c:171 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 0 rapl.c:171 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:170 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:171 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 3 rapl.c:171 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 13 3 rapl.c:171 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 10 13 11 4 rapl.c:172 (set (pc)
        (label_ref 12)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 11 10 9)

;; Start of basic block () -> 5
(code_label 9 11 14 5 38 "" [0 uses])

(note 14 9 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 12 14 15 6 39 "" [1 uses])

(note 15 12 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function mpi_finalize__ (mpi_finalize__)


;; Generating RTL for gimple basic block 2

;; MPI_Finalize_fortran_wrapper (ierr);

(insn 6 5 7 rapl.c:175 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 rapl.c:175 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 0 rapl.c:175 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 rapl.c:174 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])
        (reg:DI 5 di [ ierr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 rapl.c:175 (set (reg:DI 58)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 ierr+0 S8 A64])) -1 (nil))

(insn 7 6 8 3 rapl.c:175 (set (reg:DI 5 di)
        (reg:DI 58)) -1 (nil))

(call_insn 8 7 13 3 rapl.c:175 (call (mem:QI (symbol_ref:DI ("MPI_Finalize_fortran_wrapper") [flags 0x3]  <function_decl 0x7fed12cb0500 MPI_Finalize_fortran_wrapper>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 13 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 10 13 11 4 rapl.c:176 (set (pc)
        (label_ref 12)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 11 10 9)

;; Start of basic block () -> 5
(code_label 9 11 14 5 40 "" [0 uses])

(note 14 9 12 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 12 14 15 6 41 "" [1 uses])

(note 15 12 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

